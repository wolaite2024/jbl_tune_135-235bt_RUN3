#ifndef _BLE_AUDIO_H_
#define _BLE_AUDIO_H_

#ifdef  __cplusplus
extern "C" {
#endif      /* __cplusplus */

#include "gap_msg.h"
#include "gap.h"
#include "app_msg.h"

typedef enum
{
    LE_AUDIO_MSG_GROUP_BASS         = 0x0000,
    LE_AUDIO_MSG_GROUP_BASS_CLIENT  = 0x0100,
    LE_AUDIO_MSG_GROUP_PACS         = 0x0200,
    LE_AUDIO_MSG_GROUP_PACS_CLIENT  = 0x0300,
    LE_AUDIO_MSG_GROUP_CSIS         = 0x0400,
    LE_AUDIO_MSG_GROUP_CSIS_CLIENT  = 0x0500,
    LE_AUDIO_MSG_GROUP_ASCS         = 0x0600,
    LE_AUDIO_MSG_GROUP_ASCS_CLIENT  = 0x0700,
    LE_AUDIO_MSG_GROUP_VOCS         = 0x0800,
    LE_AUDIO_MSG_GROUP_VOCS_CLIENT  = 0x0900,
    LE_AUDIO_MSG_GROUP_VCS          = 0x0A00,
    LE_AUDIO_MSG_GROUP_VCS_CLIENT   = 0x0B00,
    LE_AUDIO_MSG_GROUP_AICS         = 0x0C00,
    LE_AUDIO_MSG_GROUP_AICS_CLIENT  = 0x0D00,
    LE_AUDIO_MSG_GROUP_MICS         = 0x0E00,
    LE_AUDIO_MSG_GROUP_MICS_CLIENT  = 0x0F00,
    LE_AUDIO_MSG_GROUP_CCP          = 0x1000,
    LE_AUDIO_MSG_GROUP_CCP_CLIENT   = 0x1100,
    LE_AUDIO_MSG_GROUP_MCS          = 0x1200,
    LE_AUDIO_MSG_GROUP_MCS_CLIENT   = 0x1300,
    LE_AUDIO_MSG_GROUP_OTS          = 0x1400,
    LE_AUDIO_MSG_GROUP_OTS_CLIENT   = 0x1500,
    LE_AUDIO_MSG_GROUP_TMAS         = 0x1600,
    LE_AUDIO_MSG_GROUP_TMAP_CLIENT  = 0x1700,

    LE_AUDIO_MSG_GROUP_CAP          = 0x2000,
    LE_AUDIO_MSG_GROUP_BAP          = 0x2100,
} T_LE_AUDIO_MSG_GROUP;

typedef enum
{
    //bass_mgr.h
    LE_AUDIO_MSG_BASS_REMOTE_CP               = LE_AUDIO_MSG_GROUP_BASS | 0x00,
    LE_AUDIO_MSG_BASS_BRS_MODIFY              = LE_AUDIO_MSG_GROUP_BASS | 0x01,
    LE_AUDIO_MSG_BASS_BA_ADD_SOURCE           = LE_AUDIO_MSG_GROUP_BASS | 0x02,
    LE_AUDIO_MSG_BASS_LOCAL_ADD_SOURCE        = LE_AUDIO_MSG_GROUP_BASS | 0x03,
    LE_AUDIO_MSG_BASS_GET_PA_SYNC_PARAM       = LE_AUDIO_MSG_GROUP_BASS | 0x04,
    LE_AUDIO_MSG_BASS_GET_BROADCAST_CODE      = LE_AUDIO_MSG_GROUP_BASS | 0x05,
    LE_AUDIO_MSG_BASS_GET_BIG_SYNC_PARAM      = LE_AUDIO_MSG_GROUP_BASS | 0x06,
    LE_AUDIO_MSG_BASS_GET_PREFER_BIS_SYNC     = LE_AUDIO_MSG_GROUP_BASS | 0x07,
    LE_AUDIO_MSG_BASS_BRS_CHAR_NO_EMPTY       = LE_AUDIO_MSG_GROUP_BASS | 0x08,

    //bass_client.h
    LE_AUDIO_MSG_BASS_CLIENT_DIS_DONE         = LE_AUDIO_MSG_GROUP_BASS_CLIENT | 0x00,
    LE_AUDIO_MSG_BASS_CLIENT_CCCD             = LE_AUDIO_MSG_GROUP_BASS_CLIENT | 0x01,
    LE_AUDIO_MSG_BASS_CLIENT_CP_RESULT        = LE_AUDIO_MSG_GROUP_BASS_CLIENT | 0x02,
    LE_AUDIO_MSG_BASS_CLIENT_BRS_DATA         = LE_AUDIO_MSG_GROUP_BASS_CLIENT | 0x03,
    LE_AUDIO_MSG_BASS_CLIENT_SYNC_INFO_REQ    = LE_AUDIO_MSG_GROUP_BASS_CLIENT | 0x04,
    //pacs_mgr.h
    LE_AUDIO_MSG_PACS_WRITE_SINK_AUDIO_LOC           = LE_AUDIO_MSG_GROUP_PACS | 0x00,
    LE_AUDIO_MSG_PACS_WRITE_SOURCE_AUDIO_LOC         = LE_AUDIO_MSG_GROUP_PACS | 0x01,
    LE_AUDIO_MSG_PACS_AVAILABLE_CONTEXTS_READ_IND    = LE_AUDIO_MSG_GROUP_PACS | 0x02,
    //pacs_client.h
    LE_AUDIO_MSG_PACS_CLIENT_DIS_DONE                = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x00,
    LE_AUDIO_MSG_PACS_CLIENT_CCCD                    = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x01,
    LE_AUDIO_MSG_PACS_CLIENT_WRITE_SINK_LOC_RESULT   = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x02,
    LE_AUDIO_MSG_PACS_CLIENT_WRITE_SOURCE_LOC_RESULT = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x03,
    LE_AUDIO_MSG_PACS_CLIENT_READ_RESULT             = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x04,
    LE_AUDIO_MSG_PACS_CLIENT_NOTIFY                  = LE_AUDIO_MSG_GROUP_PACS_CLIENT | 0x05,
    //ascs_mgr.h
    LE_AUDIO_MSG_ASCS_ASE_STATE                = LE_AUDIO_MSG_GROUP_ASCS | 0x00,
    LE_AUDIO_MSG_ASCS_CP_CONFIG_CODEC          = LE_AUDIO_MSG_GROUP_ASCS | 0x01,
    LE_AUDIO_MSG_ASCS_CP_CONFIG_QOS            = LE_AUDIO_MSG_GROUP_ASCS | 0x02,
    LE_AUDIO_MSG_ASCS_CP_ENABLE                = LE_AUDIO_MSG_GROUP_ASCS | 0x03,
    LE_AUDIO_MSG_ASCS_CP_DISABLE               = LE_AUDIO_MSG_GROUP_ASCS | 0x04,
    LE_AUDIO_MSG_ASCS_CP_UPDATE_METADATA       = LE_AUDIO_MSG_GROUP_ASCS | 0x05,
    LE_AUDIO_MSG_ASCS_SETUP_DATA_PATH          = LE_AUDIO_MSG_GROUP_ASCS | 0x06,
    LE_AUDIO_MSG_ASCS_REMOVE_DATA_PATH         = LE_AUDIO_MSG_GROUP_ASCS | 0x07,
    LE_AUDIO_MSG_ASCS_PREFER_QOS               = LE_AUDIO_MSG_GROUP_ASCS | 0x08,
    LE_AUDIO_MSG_ASCS_CIS_REQUEST_IND          = LE_AUDIO_MSG_GROUP_ASCS | 0x09,
    //ascs_client.h
    LE_AUDIO_MSG_ASCS_CLIENT_DIS_DONE          = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x00,
    LE_AUDIO_MSG_ASCS_CLIENT_CCCD              = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x01,
    LE_AUDIO_MSG_ASCS_CLIENT_CP_NOTIFY         = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x02,
    LE_AUDIO_MSG_ASCS_CLIENT_READ_ASE_DATA     = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x03,
    LE_AUDIO_MSG_ASCS_CLIENT_ASE_DATA_NOTIFY   = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x04,
    LE_AUDIO_MSG_ASCS_CLIENT_READ_ASE_ALL      = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x05,
    LE_AUDIO_MSG_ASCS_CLIENT_SETUP_DATA_PATH   = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x06,
    LE_AUDIO_MSG_ASCS_CLIENT_REMOVE_DATA_PATH  = LE_AUDIO_MSG_GROUP_ASCS_CLIENT | 0x07,
    //vcs_mgr.h
    LE_AUDIO_MSG_VCS_VOLUME_STATE_CHANGE       = LE_AUDIO_MSG_GROUP_VCS | 0x00,
    //vcs_client.h
    LE_AUDIO_MSG_VCS_CLIENT_DIS_DONE           = LE_AUDIO_MSG_GROUP_VCS_CLIENT | 0x00,
    LE_AUDIO_MSG_VCS_CLIENT_CCCD               = LE_AUDIO_MSG_GROUP_VCS_CLIENT | 0x01,
    LE_AUDIO_MSG_VCS_CLIENT_READ_RESULT        = LE_AUDIO_MSG_GROUP_VCS_CLIENT | 0x02,
    LE_AUDIO_MSG_VCS_CLIENT_CP_RESULT          = LE_AUDIO_MSG_GROUP_VCS_CLIENT | 0x03,
    LE_AUDIO_MSG_VCS_CLIENT_NOTIFY             = LE_AUDIO_MSG_GROUP_VCS_CLIENT | 0x04,
    //vocs_mgr.h
    LE_AUDIO_MSG_VOCS_OFFSET_STATE_CHANGE       = LE_AUDIO_MSG_GROUP_VOCS | 0x00,
    LE_AUDIO_MSG_VOCS_AUDIO_LOCATION_CHANGE     = LE_AUDIO_MSG_GROUP_VOCS | 0x01,
    LE_AUDIO_MSG_VOCS_AUDIO_OUTPUT_DES          = LE_AUDIO_MSG_GROUP_VOCS | 0x02,
    //vocs_client.h
    LE_AUDIO_MSG_VOCS_CLIENT_DIS_DONE           = LE_AUDIO_MSG_GROUP_VOCS_CLIENT | 0x00,
    LE_AUDIO_MSG_VOCS_CLIENT_CCCD               = LE_AUDIO_MSG_GROUP_VOCS_CLIENT | 0x01,
    LE_AUDIO_MSG_VOCS_CLIENT_READ_RESULT        = LE_AUDIO_MSG_GROUP_VOCS_CLIENT | 0x02,
    LE_AUDIO_MSG_VOCS_CLIENT_CP_RESULT          = LE_AUDIO_MSG_GROUP_VOCS_CLIENT | 0x03,
    LE_AUDIO_MSG_VOCS_CLIENT_NOTIFY             = LE_AUDIO_MSG_GROUP_VOCS_CLIENT | 0x04,
    //csis_mgr.h
    LE_AUDIO_MSG_CSIS_READ_SIRK                 = LE_AUDIO_MSG_GROUP_CSIS | 0x00,
    LE_AUDIO_MSG_CSIS_LOCK_STATE                = LE_AUDIO_MSG_GROUP_CSIS | 0x01,
    //csis_client.h
    LE_AUDIO_MSG_CSIS_CLIENT_DIS_DONE           = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x00,
    LE_AUDIO_MSG_CSIS_CLIENT_SEARCH_TIMEOUT     = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x01,
    LE_AUDIO_MSG_CSIS_CLIENT_SEARCH_DONE        = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x02,
    LE_AUDIO_MSG_CSIS_CLIENT_MEMBS_CONN         = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x03,
    LE_AUDIO_MSG_CSIS_CLIENT_SET_MEM_FOUND      = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x04,
    LE_AUDIO_MSG_CSIS_CLIENT_COOR_SET_DEL       = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x05,
    LE_AUDIO_MSG_CSIS_CLIENT_LOCK_REQ_DONE      = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x06,
    LE_AUDIO_MSG_CSIS_CLIENT_UNLOCK_REQ_DONE    = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x07,
    LE_AUDIO_MSG_CSIS_CLIENT_LOCK_STATE_CHANGE  = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x08,
    LE_AUDIO_MSG_CSIS_CLIENT_READ_RESULT        = LE_AUDIO_MSG_GROUP_CSIS_CLIENT | 0x09,
    //aics_mgr.h
    LE_AUDIO_MSG_AICS_INPUT_CP_OP               = LE_AUDIO_MSG_GROUP_AICS | 0x00,
    LE_AUDIO_MSG_AICS_WRITE_INPUT_DES           = LE_AUDIO_MSG_GROUP_AICS | 0x01,
    //aics_client.h
    LE_AUDIO_MSG_AICS_CLIENT_DIS_DONE           = LE_AUDIO_MSG_GROUP_AICS_CLIENT | 0x00,
    LE_AUDIO_MSG_AICS_CLIENT_CCCD               = LE_AUDIO_MSG_GROUP_AICS_CLIENT | 0x01,
    LE_AUDIO_MSG_AICS_CLIENT_READ_RESULT        = LE_AUDIO_MSG_GROUP_AICS_CLIENT | 0x02,
    LE_AUDIO_MSG_AICS_CLIENT_CP_RESULT          = LE_AUDIO_MSG_GROUP_AICS_CLIENT | 0x03,
    LE_AUDIO_MSG_AICS_CLIENT_NOTIFY             = LE_AUDIO_MSG_GROUP_AICS_CLIENT | 0x04,
    //mics_mgr.h
    LE_AUDIO_MSG_MICS_WRITE_MUTE_VALUE          = LE_AUDIO_MSG_GROUP_MICS | 0x00,
    //mics_client.h
    LE_AUDIO_MSG_MICS_CLIENT_DIS_DONE           = LE_AUDIO_MSG_GROUP_MICS_CLIENT | 0x00,
    LE_AUDIO_MSG_MICS_CLIENT_CCCD               = LE_AUDIO_MSG_GROUP_MICS_CLIENT | 0x01,
    LE_AUDIO_MSG_MICS_CLIENT_READ_RESULT        = LE_AUDIO_MSG_GROUP_MICS_CLIENT | 0x02,
    LE_AUDIO_MSG_MICS_CLIENT_WRITE_RESULT       = LE_AUDIO_MSG_GROUP_MICS_CLIENT | 0x03,
    LE_AUDIO_MSG_MICS_CLIENT_NOTIFY             = LE_AUDIO_MSG_GROUP_MICS_CLIENT | 0x04,
    //ccp_mgr.h
    LE_AUDIO_MSG_CCP_WRITE_RPT_INT              = LE_AUDIO_MSG_GROUP_CCP | 0x00,
    LE_AUDIO_MSG_CCP_HANDLE_CCP                 = LE_AUDIO_MSG_GROUP_CCP | 0x01,
    LE_AUDIO_MSG_CCP_READ_RESULT                = LE_AUDIO_MSG_GROUP_CCP | 0x02,
    //ccp_client.h
    LE_AUDIO_MSG_CCP_CLIENT_DIS_DONE                  = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x00,
    LE_AUDIO_MSG_CCP_CLIENT_CCCD                      = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x01,
    LE_AUDIO_MSG_CCP_CLIENT_READ_RESULT               = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x02,
    LE_AUDIO_MSG_CCP_CLIENT_BPN_NOTIFY                = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x03,
    LE_AUDIO_MSG_CCP_CLIENT_TECH_NOTIFY               = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x04,
    LE_AUDIO_MSG_CCP_CLIENT_URI_SCH_SUP_LIST_NOTIFY   = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x05,
    LE_AUDIO_MSG_CCP_CLIENT_SIG_STREN_NOTIFY          = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x06,
    LE_AUDIO_MSG_CCP_CLIENT_CUR_CALL_LIST_NOTIFY      = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x07,
    LE_AUDIO_MSG_CCP_CLIENT_STATUS_FLAGS_NOTIFY       = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x08,
    LE_AUDIO_MSG_CCP_CLIENT_INCALL_TG_URI_NOTIFY      = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x09,
    LE_AUDIO_MSG_CCP_CLIENT_CALL_STATE_NOTIFY         = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x0A,
    LE_AUDIO_MSG_CCP_CLIENT_CCP_RES_NOTIFY            = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x0B,
    LE_AUDIO_MSG_CCP_CLIENT_TERM_REASON_NOTIFY        = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x0C,
    LE_AUDIO_MSG_CCP_CLIENT_INCOMING_CALL_NOTIFY      = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x0D,
    LE_AUDIO_MSG_CCP_CLIENT_CALL_FRI_NAME_NOTIFY      = LE_AUDIO_MSG_GROUP_CCP_CLIENT | 0x0E,

    //mcs_mgr.h
    LE_AUDIO_MSG_MCS_READ_REQ                         = LE_AUDIO_MSG_GROUP_MCS | 0x00,
    LE_AUDIO_MSG_MCS_WRITE_REQ                        = LE_AUDIO_MSG_GROUP_MCS | 0x01,
    LE_AUDIO_MSG_MCP_OPERATION                        = LE_AUDIO_MSG_GROUP_MCS | 0x02,
    LE_AUDIO_MSG_SCP_RESULT                           = LE_AUDIO_MSG_GROUP_MCS | 0x03,
    //mcs_client.h
    LE_AUDIO_MSG_MCS_CLIENT_DIS_DONE                  = LE_AUDIO_MSG_GROUP_MCS_CLIENT | 0x00,
    LE_AUDIO_MSG_MCS_CLIENT_READ_RESULT               = LE_AUDIO_MSG_GROUP_MCS_CLIENT | 0x01,
    LE_AUDIO_MSG_MCS_CLIENT_READ_OBJ_IDS              = LE_AUDIO_MSG_GROUP_MCS_CLIENT | 0x02,
    LE_AUDIO_MSG_MCS_CLIENT_NOTIFY_RESULT             = LE_AUDIO_MSG_GROUP_MCS_CLIENT | 0x03,
    LE_AUDIO_MSG_MCS_CLIENT_READ_OBJ_RES              = LE_AUDIO_MSG_GROUP_MCS_CLIENT | 0x04,

    //ots_client.h
    LE_AUDIO_MSG_OTS_CLIENT_DIS_DONE                  = LE_AUDIO_MSG_GROUP_OTS_CLIENT | 0x00,
    LE_AUDIO_MSG_OTS_CLIENT_READ_RES                  = LE_AUDIO_MSG_GROUP_OTS_CLIENT | 0x01,
    LE_AUDIO_MSG_OTS_CLIENT_OLCP_IND                  = LE_AUDIO_MSG_GROUP_OTS_CLIENT | 0x02,

    //tmap_client.h
    LE_AUDIO_MSG_TMAP_CLIENT_DIS_DONE                 = LE_AUDIO_MSG_GROUP_TMAP_CLIENT | 0x00,
    LE_AUDIO_MSG_TMAP_READ_ROLE                       = LE_AUDIO_MSG_GROUP_TMAP_CLIENT | 0x01,
    LE_AUDIO_MSG_TMAP_READ_ROLE_BY_UUID               = LE_AUDIO_MSG_GROUP_TMAP_CLIENT | 0x02,

    //bap.h
    LE_AUDIO_MSG_BAP_PACS_DIS_DONE                    = LE_AUDIO_MSG_GROUP_BAP | 0x00,
    LE_AUDIO_MSG_BAP_PAC_NOTIFY                       = LE_AUDIO_MSG_GROUP_BAP | 0x01,
    LE_AUDIO_MSG_BAP_ASCS_DIS_DONE                    = LE_AUDIO_MSG_GROUP_BAP | 0x02,

    //cap.h
    LE_AUDIO_MSG_CAP_DIS_DONE                         = LE_AUDIO_MSG_GROUP_CAP | 0x00,
} T_LE_AUDIO_MSG;

typedef T_APP_RESULT(*P_FUN_BLE_AUDIO_CB)(T_LE_AUDIO_MSG msg, void *buf);

void ble_audio_handle_msg(T_IO_MSG *p_io_msg);
void ble_audio_init(P_FUN_BLE_AUDIO_CB p_fun_cb, void *evt_queue_handle, void *io_queue_handle);
void ble_audio_handle_gap_msg(uint16_t subtype, T_LE_GAP_MSG gap_msg);
void ble_audio_handle_gap_cb(uint8_t cb_type, void *p_cb_data);
bool ble_audio_check_remote_features(uint16_t conn_handle, uint8_t array_index,
                                     uint8_t feature_mask);

#ifdef  __cplusplus
}
#endif      /*  __cplusplus */

#endif
